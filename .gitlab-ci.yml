image: docker:19.03.13


stages:
  - build_kaniko
  - deploy

build_kaniko_prod:
  stage: build_kaniko
  variables:
    IMAGE_DESTINATION: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME}
  only:
    - development
  image:
      # We recommend using the CERN version of the Kaniko image: gitlab-registry.cern.ch/ci-tools/docker-image-builder
      #      name: gitlab-registry.cern.ch/ci-tools/docker-image-builder
      name: gcr.io/kaniko-project/executor:debug

      entrypoint: [""]
  script:
      # Prepare Kaniko configuration file
      - echo $CI_REGISTRY_IMAGE
      - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
      # Build and push the image from the Dockerfile at the root of the project.
      - /kaniko/executor --context $CI_PROJECT_DIR  --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $IMAGE_DESTINATION --cache-dir=/workspace/cache 
      # Print the full registry path of the pushed image
      - echo "Image pushed successfully to ${IMAGE_DESTINATION}"
      - echo "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME}"      

deploy:
  stage: deploy
  # image: kroniak/ssh-client

  image: docker:latest
  services:
    - docker:dind
  variables:
    DOCKER_DRIVER: overlay2 # not sure if this is needed
    DOCKER_TLS_CERTDIR: "/certs"

  # services: 
  #   - docker:18.09.7-dind # older version that does not need demand TLS (see below)
  before_script:
    - echo "deploying app"
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    # - echo "${SSH_PRIVATE_KEY}" | ssh-add -
  only:
    - development
  script:
    - apk add --update --no-cache openssh
    - chmod 400 $SSH_PRIVATE_KEY
    - ssh -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY $PROD_SERVER_USER@$PROD_SERVER_IP "docker login -u '$CI_REGISTRY_USER' -p '$CI_REGISTRY_PASSWORD' $CI_REGISTRY"
    - ssh -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY $PROD_SERVER_USER@$PROD_SERVER_IP "docker pull registry.gitlab.com/1itech_company_uz/shop_admin:development"
    - ssh -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY $PROD_SERVER_USER@$PROD_SERVER_IP "docker stop shop_admin && docker rm shop_admin && docker run -e "PORT=3001" -p 3001:3001 --name shop_admin -d registry.gitlab.com/1itech_company_uz/shop_admin:development"